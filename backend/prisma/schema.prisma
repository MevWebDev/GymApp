generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(uuid())
  nick              String
  email             String             @unique
  avatar            String             @default("https://www.shutterstock.com/image-vector/vector-flat-illustration-grayscale-avatar-600nw-2264922221.jpg")


  followers         UserFollow[]       @relation("FollowerRelation")
  following         UserFollow[]       @relation("FollowingRelation")

  workoutPlans      WorkoutPlan[]
  savedWorkoutPlans WorkoutPlan[]      @relation("SavedWorkouts")
}

model UserFollow {

  followerId   String

  followingId  String

 
  follower     User   @relation("FollowingRelation", fields: [followerId], references: [id])
  following    User   @relation("FollowerRelation", fields: [followingId], references: [id])

  
  @@id([followerId, followingId])
}

model Exercise {
  id                       Int                   @id
  name                     String
  bodyPart                 String
  equipment                String
  gifUrl                   String
  target                   String
  CompletedWorkoutExercise CompletedWorkoutExercise[]
  planItems                WorkoutPlanExercise[]
}

model WorkoutPlan {
  id          Int                   @id @default(autoincrement())
  title       String
  description String?
  image       String
  userId      String
  user        User                  @relation(fields: [userId], references: [id])
  exercises   WorkoutPlanExercise[]
  savedByUsers User[]    @relation("SavedWorkouts")
}

model WorkoutPlanExercise {
  id            Int         @id @default(autoincrement())
  sets         Int          @default(3)
  reps          Int         @default(10)
  workoutPlanId Int
  exerciseId    Int
  exercise      Exercise    @relation(fields: [exerciseId], references: [id])
  workoutPlan   WorkoutPlan @relation(fields: [workoutPlanId], references: [id])
}

model CompletedWorkout {
  id                 Int                        @id @default(autoincrement())
  userId             Int
  date               DateTime                   @default(now())
  completedExercises CompletedWorkoutExercise[]
}

model CompletedWorkoutExercise {
  id                 Int              @id @default(autoincrement())
  reps               Int
  weight             Float?
  completedWorkoutId Int
  exerciseId         Int
  completedWorkout   CompletedWorkout @relation(fields: [completedWorkoutId], references: [id])
  exercise           Exercise         @relation(fields: [exerciseId], references: [id])
}
